// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.




#include "Compressor.h"
#include "../RobotMap.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

int Compressors::level=0;

Compressors::Compressors() : Subsystem("Compressor") {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    speedController1 = RobotMap::compressorSpeedController1;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

}

void Compressors::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}

void Compressors::level_up()
{
	level++;
	if (level>=6)
	{
		level=0;
	}
}

void Compressors::level_down()
{
	level--;
	if (level<=-1)
	{
		level=5;
	}
}

void Compressors::climb()
{
	float speed;
	switch(level)
	{
	case 0: speed = 0; break;
	case 1: speed = 0.2; break;
	case 2: speed = 0.4; break;
	case 3: speed = 0.6; break;
	case 4: speed = 0.8; break;
	case 5: speed = 1; break;
	}
	speedController1->Set(speed);
}

void Compressors::stop()
{
	speedController1->Set(0);
}

// Put methods for controlling this subsystem
// here. Call these from Commands.

